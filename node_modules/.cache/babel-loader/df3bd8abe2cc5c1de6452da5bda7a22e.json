{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './LyricsPage.module.css';\nimport { fetchTrackLyrics, fetchTrackInfo } from '../musicxmatchAPI';\nimport { Card, CardContent, Typography, Button, Paper } from '@material-ui/core';\nimport spinnerGIF from '../../images/spinner.gif';\n\nconst LyricsPage = ({\n  match\n}) => {\n  const [lyrics, setLyrics] = useState({});\n  const [trackInfo, setTrackInfo] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      setLyrics(await fetchTrackLyrics(match.params.id));\n      setTrackInfo(await fetchTrackInfo(match.params.id));\n    };\n\n    fetchData();\n  }, [match.params.id]);\n  return (\n    /*#__PURE__*/\n    //    lyrics&trackInfo? \n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, JSON.stringify(lyrics) !== JSON.stringify({}) && JSON.stringify(trackInfo) !== JSON.stringify({}) ? /*#__PURE__*/React.createElement(Card, {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compact-disc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 68\n      }\n    }), \" Album: \", trackInfo.album_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-microphone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 68\n      }\n    }), \" Artist: \", trackInfo.artist_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-play-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 68\n      }\n    }), \" Track: \", trackInfo.track_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 68\n      }\n    }), \" Rating: \", trackInfo.track_rating), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"Lyrics\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, lyrics.lyrics_body)))) : /*#__PURE__*/React.createElement(\"img\", {\n      src: spinnerGIF,\n      alt: \"loading....\",\n      className: styles.spinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }))\n  );\n};\n\nexport default LyricsPage;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js"],"names":["React","useState","useEffect","styles","fetchTrackLyrics","fetchTrackInfo","Card","CardContent","Typography","Button","Paper","spinnerGIF","LyricsPage","match","lyrics","setLyrics","trackInfo","setTrackInfo","fetchData","params","id","JSON","stringify","card","album_name","artist_name","track_name","track_rating","lyrics_body","spinner"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styles from './LyricsPage.module.css'\nimport {fetchTrackLyrics, fetchTrackInfo} from '../musicxmatchAPI'\nimport { Card, CardContent, Typography, Button, Paper } from '@material-ui/core'\nimport spinnerGIF from '../../images/spinner.gif'\n\nconst LyricsPage = ({match}) => {\n    const[lyrics, setLyrics] = useState({})\n    const[trackInfo, setTrackInfo] = useState({})\n\n    useEffect(()=>{\n        const fetchData = async () => {\n            setLyrics(await fetchTrackLyrics(match.params.id))\n            setTrackInfo(await fetchTrackInfo(match.params.id))\n        }\n        fetchData()\n    }, [match.params.id])\n\n    return (\n    //    lyrics&trackInfo? \n    <React.Fragment>\n        {JSON.stringify(lyrics) !== JSON.stringify({}) && JSON.stringify(trackInfo) !== JSON.stringify({})?\n            (<Card className={styles.card}> \n                <CardContent>\n                    <Typography align='center' variant='subtitle1'><i className=\"fas fa-compact-disc\"></i> Album: {trackInfo.album_name}</Typography>\n                    <Typography align='center' variant='subtitle1'><i className=\"fas fa-microphone\"></i> Artist: {trackInfo.artist_name}</Typography>\n                    <Typography align='center' variant='subtitle1'><i className=\"far fa-play-circle\"></i> Track: {trackInfo.track_name}</Typography>\n                    <Typography align='center' variant='subtitle1'><i className=\"fas fa-star\"></i> Rating: {trackInfo.track_rating}</Typography>\n                    <Typography align='center' variant=\"h6\">Lyrics</Typography>\n                    <br/>\n                    <Paper>\n                        <Typography align='center' variant=\"h5\">{lyrics.lyrics_body}</Typography>\n                    </Paper>\n                </CardContent>\n            </Card>\n        )\n        :  (<img src={spinnerGIF} alt= 'loading....' className={styles.spinner}></img>)\n        }\n    </React.Fragment>\n    )\n}\n\nexport default LyricsPage\n"]},"metadata":{},"sourceType":"module"}