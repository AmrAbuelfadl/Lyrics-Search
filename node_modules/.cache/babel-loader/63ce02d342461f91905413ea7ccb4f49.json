{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './LyricsPage.module.css';\nimport { fetchTrackLyrics, fetchTrackInfo } from '../musicxmatchAPI';\n\nfunction LyricsPage({\n  match\n}) {\n  const [lyrics, setLyrics] = useState({});\n  const [trackInfo, setTrackInfo] = useState({});\n  useEffect(() => {\n    // const fetchData = async () => {\n    //     setLyrics(await fetchTrackLyrics(match.params.id))\n    //     setTrackInfo(await fetchTrackInfo(match.params.id))\n    // }\n    // fetchData()\n    let isCancelled = false;\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${match.params.id}&apikey=${process.env.REACT_APP_MMAPI_KEY}`).then(response => {\n      // console.log(\"ResponseTrackInfo\", response.data)\n      const trackInfo = response.data.message.body.track;\n\n      if (!isCancelled) {\n        setLyrics(trackInfo);\n      }\n    }).catch(error => console.log(\"Error\", error));\n    console.log(\"LYRICS\", lyrics); // console.log(\"TrackInfo\", trackInfo)\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [lyrics]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Lyrics\");\n}\n\nexport default LyricsPage;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js"],"names":["React","useState","useEffect","axios","styles","fetchTrackLyrics","fetchTrackInfo","LyricsPage","match","lyrics","setLyrics","trackInfo","setTrackInfo","isCancelled","get","params","id","process","env","REACT_APP_MMAPI_KEY","then","response","data","message","body","track","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,mBAA/C;;AACA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA6B;AACzB,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAAzC;AAGAC,EAAAA,SAAS,CAAC,MAAI;AACV;AACA;AACA;AACA;AAEA;AACA,QAAIW,WAAW,GAAG,KAAlB;AACAV,IAAAA,KAAK,CAACW,GAAN,CAAW,4FAA2FN,KAAK,CAACO,MAAN,CAAaC,EAAG,WAAUC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,EAAhK,EACCC,IADD,CACMC,QAAQ,IAAI;AACd;AACA,YAAMV,SAAS,GAAGU,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,IAAtB,CAA2BC,KAA7C;;AACA,UAAG,CAAEZ,WAAL,EAAiB;AACbH,QAAAA,SAAS,CAACC,SAAD,CAAT;AACH;AAEJ,KARD,EASCe,KATD,CASOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAThB;AAWAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBpB,MAAtB,EAnBU,CAoBV;;AAEA,WAAO,MAAM;AACTI,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD;AAKH,GA3BQ,EA2BN,CAACJ,MAAD,CA3BM,CAAT;AA4BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAED,eAAeF,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport styles from './LyricsPage.module.css'\nimport {fetchTrackLyrics, fetchTrackInfo} from '../musicxmatchAPI'\nfunction LyricsPage({match}) {\n    const[lyrics, setLyrics] = useState({})\n    const[trackInfo, setTrackInfo] = useState({})\n\n\n    useEffect(()=>{\n        // const fetchData = async () => {\n        //     setLyrics(await fetchTrackLyrics(match.params.id))\n        //     setTrackInfo(await fetchTrackInfo(match.params.id))\n        // }\n\n        // fetchData()\n        let isCancelled = false\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${match.params.id}&apikey=${process.env.REACT_APP_MMAPI_KEY}`)\n        .then(response => {\n            // console.log(\"ResponseTrackInfo\", response.data)\n            const trackInfo = response.data.message.body.track\n            if(! isCancelled){\n                setLyrics(trackInfo)\n            }\n            \n        })\n        .catch(error => console.log(\"Error\", error))\n\n        console.log(\"LYRICS\", lyrics)\n        // console.log(\"TrackInfo\", trackInfo)\n\n        return () => {\n            isCancelled = true\n        }\n        \n\n    }, [lyrics])\n    return (\n        <div>\n            Lyrics\n        </div>\n    )\n}\n\nexport default LyricsPage\n"]},"metadata":{},"sourceType":"module"}