{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/NavBar/NavBar.js\";\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, InputBase } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport SearchIcon from '@material-ui/icons/Search';\nimport styles from './NavBar.module.css';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '19ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n\nfunction NavBar() {\n  const classes = useStyles();\n  const [term, setTerm] = useState(null);\n  const [event, setEvent] = useState(false);\n\n  const changehandler = event => {\n    setTerm(event.target.value);\n    setEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    className: styles.bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: styles.txt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"LyricFinder\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: styles.btnLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(classes.search, styles.search),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => props.submitHandler(term, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Search a Track....\",\n    className: styles.width,\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      'aria-label': 'search'\n    },\n    onChange: changehandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/NavBar/NavBar.js"],"names":["React","useState","AppBar","Toolbar","Typography","Button","InputBase","fade","makeStyles","cx","SearchIcon","styles","Link","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","term","setTerm","event","setEvent","changehandler","target","value","bar","txt","btnLink","props","submitHandler","input"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {AppBar, Toolbar, Typography, Button, InputBase} from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames'\nimport SearchIcon from '@material-ui/icons/Search';\nimport styles from './NavBar.module.css'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '19ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }));\n  \n\nfunction NavBar() {\n    const classes = useStyles();\n    const [term, setTerm] = useState(null)\n    const [event, setEvent] = useState(false)\n\n    const changehandler = (event) => {\n        setTerm(event.target.value)\n        setEvent(event)\n    }\n\n    return (\n        <AppBar position=\"static\" className={styles.bar}>\n            <Toolbar >\n                <Typography variant=\"h6\" className={styles.txt}>LyricFinder</Typography>\n                <Link to='/' className={styles.btnLink}>\n                    <Button color=\"inherit\" >Home</Button>\n                </Link>\n                <div className={ cx(classes.search, styles.search)}>\n                    <div className={classes.searchIcon}>\n                         <SearchIcon />\n                    </div>\n                    <form onSubmit = {() => props.submitHandler(term, event)}> \n                        <InputBase\n                        placeholder=\"Search a Track....\"\n                        className = {styles.width}\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'search' }}\n                        onChange={changehandler}\n                        />\n                    </form>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}