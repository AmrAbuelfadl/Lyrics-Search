{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './LyricsPage.module.css';\nimport { fetchTrackLyrics, fetchTrackInfo } from '../musicxmatchAPI';\nimport { Card, CardContent, Typography, Button } from '@material-ui/core';\nimport spinnerGIF from '../../images/spinner.gif';\n\nconst LyricsPage = ({\n  match\n}) => {\n  const [lyrics, setLyrics] = useState({});\n  const [trackInfo, setTrackInfo] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      setLyrics(await fetchTrackLyrics(match.params.id));\n      setTrackInfo(await fetchTrackInfo(match.params.id));\n    };\n\n    fetchData();\n  }, [match.params.id]);\n  return (\n    /*#__PURE__*/\n    //    lyrics&trackInfo? \n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, JSON.stringify(lyrics) !== JSON.stringify({}) && JSON.stringify(trackInfo) !== JSON.stringify({}) ? /*#__PURE__*/React.createElement(Card, {\n      className: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, lyrics.lyrics_body), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, trackInfo.album_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, trackInfo.artist_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, trackInfo.track_name), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, trackInfo.track_rating))) : /*#__PURE__*/React.createElement(\"img\", {\n      src: spinnerGIF,\n      alt: \"loading....\",\n      className: styles.spinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }))\n  );\n};\n\nexport default LyricsPage;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js"],"names":["React","useState","useEffect","styles","fetchTrackLyrics","fetchTrackInfo","Card","CardContent","Typography","Button","spinnerGIF","LyricsPage","match","lyrics","setLyrics","trackInfo","setTrackInfo","fetchData","params","id","JSON","stringify","card","lyrics_body","album_name","artist_name","track_name","track_rating","spinner"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,mBAA/C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,MAAxC,QAAsD,mBAAtD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5B,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMe,SAAS,GAAG,YAAY;AAC1BH,MAAAA,SAAS,CAAC,MAAMV,gBAAgB,CAACQ,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAvB,CAAT;AACAH,MAAAA,YAAY,CAAC,MAAMX,cAAc,CAACO,KAAK,CAACM,MAAN,CAAaC,EAAd,CAArB,CAAZ;AACH,KAHD;;AAIAF,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACL,KAAK,CAACM,MAAN,CAAaC,EAAd,CANM,CAAT;AAQA;AAAA;AACA;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IAAI,CAACC,SAAL,CAAeR,MAAf,MAA2BO,IAAI,CAACC,SAAL,CAAe,EAAf,CAA3B,IAAiDD,IAAI,CAACC,SAAL,CAAeN,SAAf,MAA8BK,IAAI,CAACC,SAAL,CAAe,EAAf,CAA/E,gBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACmB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCT,MAAM,CAACU,WAAhD,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDR,SAAS,CAACS,UAA1D,CAFJ,eAGI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDT,SAAS,CAACU,WAA1D,CAHJ,eAII,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDV,SAAS,CAACW,UAA1D,CAJJ,eAKI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDX,SAAS,CAACY,YAA1D,CALJ,CADH,CADJ,gBAWG;AAAK,MAAA,GAAG,EAAEjB,UAAV;AAAsB,MAAA,GAAG,EAAE,aAA3B;AAAyC,MAAA,SAAS,EAAEP,MAAM,CAACyB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR;AAFA;AAkBH,CA9BD;;AAgCA,eAAejB,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styles from './LyricsPage.module.css'\nimport {fetchTrackLyrics, fetchTrackInfo} from '../musicxmatchAPI'\nimport { Card, CardContent, Typography, Button } from '@material-ui/core'\nimport spinnerGIF from '../../images/spinner.gif'\n\nconst LyricsPage = ({match}) => {\n    const[lyrics, setLyrics] = useState({})\n    const[trackInfo, setTrackInfo] = useState({})\n\n    useEffect(()=>{\n        const fetchData = async () => {\n            setLyrics(await fetchTrackLyrics(match.params.id))\n            setTrackInfo(await fetchTrackInfo(match.params.id))\n        }\n        fetchData()\n    }, [match.params.id])\n\n    return (\n    //    lyrics&trackInfo? \n    <React.Fragment>\n        {JSON.stringify(lyrics) !== JSON.stringify({}) && JSON.stringify(trackInfo) !== JSON.stringify({})?\n            (<Card className={styles.card}> \n                <CardContent>\n                    <Typography align='center' variant=\"h6\">{lyrics.lyrics_body}</Typography>\n                    <Typography align='center' variant='subtitle1'>{trackInfo.album_name}</Typography>\n                    <Typography align='center' variant='subtitle1'>{trackInfo.artist_name}</Typography>\n                    <Typography align='center' variant='subtitle1'>{trackInfo.track_name}</Typography>\n                    <Typography align='center' variant='subtitle1'>{trackInfo.track_rating}</Typography>\n                </CardContent>\n            </Card>\n        )\n        :  (<img src={spinnerGIF} alt= 'loading....' className={styles.spinner}></img>)\n        }\n    </React.Fragment>\n    )\n}\n\nexport default LyricsPage\n"]},"metadata":{},"sourceType":"module"}