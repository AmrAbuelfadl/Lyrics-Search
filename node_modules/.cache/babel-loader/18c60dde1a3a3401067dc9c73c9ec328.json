{"ast":null,"code":"var _jsxFileName = \"/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './LyricsPage.module.css';\nimport { fetchTrackLyrics, fetchTrackInfo } from '../musicxmatchAPI';\nimport { Card, CardContent, Typography, Button } from '@material-ui/core';\nimport spinnerGIF from '../../images/spinner.gif';\n\nconst LyricsPage = ({\n  match\n}) => {\n  const [lyrics, setLyrics] = useState({});\n  const [trackInfo, setTrackInfo] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      setLyrics(await fetchTrackLyrics(match.params.id));\n      setTrackInfo(await fetchTrackInfo(match.params.id));\n    };\n\n    fetchData();\n  }, [match.params.id]);\n  return lyrics & trackInfo ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, lyrics.lyrics_body), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, trackInfo.album_name), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, trackInfo.artist_name), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, trackInfo.track_name), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, trackInfo.track_rating))) : /*#__PURE__*/React.createElement(\"img\", {\n    src: spinnerGIF,\n    alt: \"loading....\",\n    className: styles.spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default LyricsPage;","map":{"version":3,"sources":["/Users/amrabuelfadl/Desktop/ReactProjects/lyric-search/src/components/LyricsPage/LyricsPage.js"],"names":["React","useState","useEffect","styles","fetchTrackLyrics","fetchTrackInfo","Card","CardContent","Typography","Button","spinnerGIF","LyricsPage","match","lyrics","setLyrics","trackInfo","setTrackInfo","fetchData","params","id","lyrics_body","album_name","artist_name","track_name","track_rating","spinner"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,mBAA/C;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,MAAxC,QAAsD,mBAAtD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC5B,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMe,SAAS,GAAG,YAAY;AAC1BH,MAAAA,SAAS,CAAC,MAAMV,gBAAgB,CAACQ,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAvB,CAAT;AACAH,MAAAA,YAAY,CAAC,MAAMX,cAAc,CAACO,KAAK,CAACM,MAAN,CAAaC,EAAd,CAArB,CAAZ;AACH,KAHD;;AAIAF,IAAAA,SAAS;AACZ,GANQ,EAMN,CAACL,KAAK,CAACM,MAAN,CAAaC,EAAd,CANM,CAAT;AAQA,SACGN,MAAM,GAACE,SAAP,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,MAAM,CAACO,WAAhD,CADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDL,SAAS,CAACM,UAA1D,CAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDN,SAAS,CAACO,WAA1D,CAHJ,eAII,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDP,SAAS,CAACQ,UAA1D,CAJJ,eAKI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDR,SAAS,CAACS,YAA1D,CALJ,CADJ,CADD,gBAWI;AAAK,IAAA,GAAG,EAAEd,UAAV;AAAsB,IAAA,GAAG,EAAE,aAA3B;AAAyC,IAAA,SAAS,EAAEP,MAAM,CAACsB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZP;AAcH,CA1BD;;AA4BA,eAAed,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styles from './LyricsPage.module.css'\nimport {fetchTrackLyrics, fetchTrackInfo} from '../musicxmatchAPI'\nimport { Card, CardContent, Typography, Button } from '@material-ui/core'\nimport spinnerGIF from '../../images/spinner.gif'\n\nconst LyricsPage = ({match}) => {\n    const[lyrics, setLyrics] = useState({})\n    const[trackInfo, setTrackInfo] = useState({})\n\n    useEffect(()=>{\n        const fetchData = async () => {\n            setLyrics(await fetchTrackLyrics(match.params.id))\n            setTrackInfo(await fetchTrackInfo(match.params.id))\n        }\n        fetchData()\n    }, [match.params.id])\n\n    return (\n       lyrics&trackInfo? \n       (<Card > \n            <CardContent>\n                <Typography align='center' variant=\"h6\">{lyrics.lyrics_body}</Typography>\n                <Typography align='center' variant='subtitle1'>{trackInfo.album_name}</Typography>\n                <Typography align='center' variant='subtitle1'>{trackInfo.artist_name}</Typography>\n                <Typography align='center' variant='subtitle1'>{trackInfo.track_name}</Typography>\n                <Typography align='center' variant='subtitle1'>{trackInfo.track_rating}</Typography>\n            </CardContent>\n        </Card>\n       )\n        : (<img src={spinnerGIF} alt= 'loading....' className={styles.spinner}></img>)\n    )\n}\n\nexport default LyricsPage\n"]},"metadata":{},"sourceType":"module"}